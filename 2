#include <stdio.h>
#include <stdlib.h>

// 배열의 최대 크기를 정의
#define MAX 10

// 주어진 배열에서 최대 값을 찾는 함수
int getMax(int array[], int size) {
    int max = array[0];
    for (int i = 1; i < size; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}

// 계수 정렬을 이용하여 주어진 자릿수(digit)에 대해 정렬하는 함수
void countingSort(int array[], int size, int place) {
    int output[size];
    int count[10] = {0};

    // 자릿수에 해당하는 숫자의 빈도수를 저장
    for (int i = 0; i < size; i++) {
        int digit = (array[i] / place) % 10;
        count[digit]++;
    }

    // 누적 빈도수를 계산
    for (int i = 1; i < 10; i++) {
        count[i] += count[i - 1];
    }

    // 누적 빈도수를 이용해 output 배열에 정렬된 값을 저장
    for (int i = size - 1; i >= 0; i--) {
        int digit = (array[i] / place) % 10;
        output[count[digit] - 1] = array[i];
        count[digit]--;
    }

    // output 배열의 값을 원래 배열로 복사
    for (int i = 0; i < size; i++) {
        array[i] = output[i];
    }
}

// 기수 정렬 함수
void radixSort(int array[], int size) {
    int max = getMax(array, size);

    // 각 자릿수에 대해 계수 정렬을 수행
    for (int place = 1; max / place > 0; place *= 10) {
        countingSort(array, size, place);
    }
}

// 배열을 출력하는 함수
void printArray(int array[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", array[i]);
    }
    printf("\n");
}

int main() {
    int array[MAX] = {121, 432, 564, 23, 1, 45, 788, 67, 3, 9};
    int size = sizeof(array) / sizeof(array[0]);

    printf("정렬 전 배열: ");
    printArray(array, size);

    radixSort(array, size);

    printf("정렬 후 배열: ");
    printArray(array, size);

    return 0;
}
